{"version":3,"sources":["utils/validators.js","Component/Signup/Signup.js","axiosUrl.js","hoc/Toast.js","Containers/Signup/Signup.js","network/Signup.js","Component/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["isValidPassword","value","test","isValidEmailAddress","match","isValidName","SignupComponent","props","handleSignup","formData","state","validateForm","setState","isSubmitted","payload","signup","then","res","status","data","hasOwnProperty","addToast","errors","title","detail","appearance","autoDismiss","message","initialFormData","catch","err","console","log","isFormValid","formError","email","email_message","password","password_message","firstName","firstName_message","lastName","lastName_message","handleChangedField","name","handleFieldChange","event","target","initalErrors","className","Form","onSubmit","this","Input","label","placeholder","onChange","error","type","Button","primary","disabled","Component","instance","axios","create","baseURL","withToast","toastFuncs","useToasts","connect","dispatch","param","post","headers","response","MainPage","React","App","Main","Boolean","window","location","hostname","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab6731d1.chunk.js","sourcesContent":["/* eslint-disable */\r\nconst isValidPassword = (value) => {\r\n    // Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character:\r\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\r\n    return (re.test(value));\r\n};\r\n  \r\nconst isValidEmailAddress = (value) => {\r\n    return null !== value.match(/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/);\r\n}\r\n\r\nconst isValidName = (value) => {\r\n    const re = /^[a-zA-Z ]+(?:-[a-zA-Z ]+)*$/;\r\n    return re.test(value);\r\n}\r\n\r\nexport {isValidPassword, isValidEmailAddress, isValidName};\r\n","/* eslint-disable no-multi-str */\r\nimport React, { Component } from 'react';\r\nimport './Signup.css';\r\nimport { Button, Form } from \"semantic-ui-react\";\r\n\r\nimport { isValidEmailAddress, isValidPassword, isValidName } from \"../../utils/validators\";\r\n\r\nclass SignupComponent extends Component {\r\n    // Constructor for initialize the Data\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialFormData = {\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n        };\r\n      \r\n        this.initalErrors = {\r\n            email: false,\r\n            email_message: \"\",\r\n            password: false,\r\n            password_message: \"\",\r\n            firstName: false,\r\n            firstName_message: \"\",\r\n            lastName: false,\r\n            lastName_message: \"\",\r\n        };\r\n\r\n        this.state = {\r\n            isSubmitted: false,\r\n            formData: {...this.initialFormData},\r\n            formError: {...this.initalErrors}\r\n        }        \r\n    }\r\n\r\n    // Call Signup Reducer function for API Call\r\n    handleSignup = () => {\r\n        const { formData } = this.state;\r\n        const isValid = this.validateForm(formData);\r\n        if (isValid) {\r\n            this.setState({isSubmitted: true});\r\n            const payload = { \r\n                \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\", \r\n                \"data\": formData\r\n            }\r\n            this.props.signup(payload).then(res => {\r\n                this.setState({isSubmitted: false});\r\n                if (res.status === 400) {\r\n                    if (res.data.hasOwnProperty('errors')){\r\n                        this.props.addToast(`${res.data.errors[0].title} - ${res.data.errors[0].detail}`, \r\n                            { appearance: 'error', autoDismiss: true });\r\n                    }\r\n                } else {\r\n                    this.props.addToast(res.message, { appearance: 'success', autoDismiss: true });\r\n                    this.setState({formData: {...this.initialFormData}});\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    // Validate form data on submit.\r\n    validateForm = (data) => {\r\n        let isFormValid = true;\r\n        const formError = {...this.state.formError};\r\n        if (data.email === '') {\r\n            formError.email = true\r\n            formError.email_message = \"Please Enter Email!\"\r\n            isFormValid = false;\r\n        } else if (!isValidEmailAddress(data.email)){\r\n            formError.email = true\r\n            formError.email_message = \"Please Enter Valid Email!\"\r\n            isFormValid = false;\r\n        } else {\r\n            formError.email = false\r\n            formError.email_message = \"\"\r\n        }\r\n        if (data.password === '') {\r\n            formError.password = true\r\n            formError.password_message = \"Please Enter Password!\"\r\n            isFormValid = false;\r\n        } else if (!isValidPassword(data.password)){\r\n            formError.password = true\r\n            formError.password_message = \"Please Enter Valid Password \\\r\n            (Password Must have 6 Characters long, 1 upper case letter, lower case letter, number, and special Character)!\"\r\n            isFormValid = false;\r\n        } else {\r\n            formError.password = false\r\n            formError.password_message = \"\"\r\n        }\r\n        if(data.firstName === '') {\r\n            formError.firstName = true\r\n            formError.firstName_message = \"Please Enter FirstName!\"\r\n            isFormValid = false;\r\n        } else if (!isValidName(data.firstName)) {\r\n            formError.firstName = true\r\n            formError.firstName_message = \"Please Enter Valid FirstName!\"\r\n            isFormValid = false;\r\n        } else {\r\n            formError.firstName = false\r\n            formError.firstName_message = \"\"\r\n        }\r\n        if (data.lastName === '') {\r\n            formError.lastName = true\r\n            formError.lastName_message = \"Please Enter LastName!\"\r\n            isFormValid = false;\r\n        } else if (!isValidName(data.lastName)) {\r\n            formError.lastName = true\r\n            formError.lastName_message = \"Please Enter Valid LastName!\"\r\n            isFormValid = false;\r\n        } else {\r\n            formError.lastName = false\r\n            formError.lastName_message = \"\"\r\n        }\r\n        this.setState({formError})\r\n        return isFormValid;\r\n    }\r\n\r\n    handleChangedField = (name, value) => {\r\n        const formError = {...this.state.formError};\r\n        if (name === 'email') {\r\n            formError[`${name}`] = true;\r\n            if (value === '') {\r\n                formError[`${name}_message`] = 'Please Enter Email';\r\n            } else if (!isValidEmailAddress(value)) {\r\n                formError[`${name}_message`] = 'Please Enter Valid Email!';\r\n            } else {\r\n                formError[`${name}`] = false;\r\n                formError[`${name}_message`] = '';\r\n            }\r\n        } else if (name === 'password') {\r\n            formError[`${name}`] = true;\r\n            if (value === '') {\r\n                formError[`${name}_message`] = 'Please Enter Password!';\r\n            } else if (!isValidPassword(value)) {\r\n                formError[`${name}_message`] = \"Please Enter Valid Password \\\r\n                    (Password Must have 6 Characters long, 1 upper case letter, lower case letter, number, and special Character)!\"\r\n            } else {\r\n                formError[`${name}`] = false;\r\n                formError[`${name}_message`] = '';\r\n            }\r\n        } else if (name === 'firstName') {\r\n            formError[`${name}`] = true;\r\n            if (value === '') {\r\n                formError[`${name}_message`] = 'Please Enter FirstName';\r\n            } else if (!isValidName(value)) {\r\n                formError[`${name}_message`] = 'Please Enter Valid FirstName!';\r\n            } else {\r\n                formError[`${name}`] = false;\r\n                formError[`${name}_message`] = '';\r\n            }\r\n        } else if (name === 'lastName') {\r\n            formError[`${name}`] = true;\r\n            if (value === '') {\r\n                formError[`${name}_message`] = 'Please Enter LastName';\r\n            } else if (!isValidName(value)) {\r\n                formError[`${name}_message`] = 'Please Enter Valid LastName!';\r\n            } else {\r\n                formError[`${name}`] = false;\r\n                formError[`${name}_message`] = '';\r\n            }\r\n        }\r\n        this.setState({formError});\r\n    }\r\n\r\n    // Handle form field Change\r\n    handleFieldChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const formData = {...this.state.formData};\r\n        formData[name] = value;\r\n        this.setState({ formData }, () => {\r\n            this.handleChangedField(name, value)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container signup-container\">\r\n                <div className=\"row card-center\">\r\n                    <div className=\"col-md-6 signup-form-1\">\r\n                        <h2>Signup</h2>\r\n                        <Form onSubmit={this.handleSignup}>\r\n                            <Form.Input label=\"FirstName *\"\r\n                                        placeholder=\"First Name\"\r\n                                        onChange={this.handleFieldChange}\r\n                                        name=\"firstName\"\r\n                                        value={this.state.formData.firstName}\r\n                                        error={this.state.formError.firstName}\r\n                                        type=\"text\"/>\r\n                            {\r\n                                this.state.formError.firstName ?\r\n                                    <span className=\"text-red float-left m-t-10 m-b10\">{this.state.formError.firstName_message}</span>\r\n                                : ''\r\n                            }\r\n                            <Form.Input label=\"LastName *\"\r\n                                        placeholder=\"Last Name\"\r\n                                        onChange={this.handleFieldChange}\r\n                                        name=\"lastName\"\r\n                                        value={this.state.formData.lastName}\r\n                                        error={this.state.formError.lastName}\r\n                                        type=\"text\"/>\r\n                            {\r\n                                this.state.formError.lastName ?\r\n                                    <span className=\"text-red float-left m-t-10 m-b10\">{this.state.formError.lastName_message}</span>\r\n                                : ''\r\n                            }\r\n                            <Form.Input label=\"Email *\"\r\n                                        placeholder=\"Email\"\r\n                                        onChange={this.handleFieldChange}\r\n                                        name=\"email\"\r\n                                        value={this.state.formData.email}\r\n                                        error={this.state.formError.email}\r\n                                        type=\"email\"/>\r\n                            {\r\n                                this.state.formError.email ?\r\n                                    <span className=\"text-red float-left m-t-10 m-b10\">{this.state.formError.email_message}</span>\r\n                                : ''\r\n                            }\r\n                            <Form.Input label=\"Password *\"\r\n                                        placeholder=\"Password\"\r\n                                        onChange={this.handleFieldChange}\r\n                                        name=\"password\"\r\n                                        value={this.state.formData.password}\r\n                                        error={this.state.formError.password}\r\n                                        type=\"password\"/>\r\n                            {\r\n                                this.state.formError.password ?\r\n                                    <span className=\"text-left text-red float-left m-t-10 m-b10\">\r\n                                        {this.state.formError.password_message}\r\n                                    </span>\r\n                                : ''\r\n                            }\r\n                            <div className=\"clearfix\">\r\n                                <Button type=\"submit\" primary className=\"btnSubmit m-t20\"\r\n                                    disabled={this.state.isSubmitted}>\r\n                                    Signup\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupComponent;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.raisely.com/v3/\"\r\n});\r\n\r\nexport default instance;\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport React from 'react';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nfunction withToast(Component) {\r\n  return function WrappedComponent(props) {\r\n    const toastFuncs = useToasts()\r\n    return <Component {...props} {...toastFuncs} />;\r\n  }\r\n}\r\n\r\nexport default withToast;\r\n","import { connect } from \"react-redux\";\r\nimport SignupComponent from \"../../Component/Signup/Signup\";\r\nimport { signup } from \"../../network/Signup\";\r\nimport withToast from '../../hoc/Toast';\r\n\r\n// Allow Props in Auth Component\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\n// Allow Props Functions in Auth Component\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup: (data) => dispatch(signup(data)),\r\n    }\r\n}\r\n\r\nexport default withToast(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignupComponent));\r\n","import axios from '../axiosUrl';\r\n\r\nexport const signup = (param) => {\r\n    return dispatch => {\r\n        return axios.post(`signup/`, param,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }\r\n        ).then(res => {\r\n            return res.data;\r\n        }).catch(err => {\r\n            console.log(err);\r\n            return err.response;\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SignupContainer from '../../Containers/Signup/Signup';\r\n\r\nclass MainPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <SignupContainer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\n\nimport MainComponent from './Component/Main/Main';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ToastProvider } from 'react-toast-notifications';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store ={store}>\n      <ToastProvider>\n        <App />\n      </ToastProvider>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}